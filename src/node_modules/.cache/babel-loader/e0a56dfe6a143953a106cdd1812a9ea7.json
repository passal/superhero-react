{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\superhero-react\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\superhero-react\\\\src\\\\src\\\\pages\\\\insertReceipt\\\\components\\\\Products.js\";\nimport React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport '../insertReceipt.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst MyButton = styled(Button)({\n  color: '#fff',\n  backgroundColor: '#20639B',\n  borderColor: \"#20639B\",\n  marginRight: '10px'\n});\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    minWidth: '400px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  popRoot: {\n    minWidth: '400px'\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numRow: 0,\n      filterText: \"\",\n      products: this.props.withPrice ? [{\n        id: '0',\n        name: \"\",\n        price: \"\",\n        qty: 0\n      }] : [{\n        id: '0',\n        name: \"\",\n        qty: 0\n      }]\n    };\n  }\n\n  handleRowDel(product) {\n    var index = this.state.products.indexOf(product);\n    this.state.products.splice(index, 1);\n    this.setState(this.state.products);\n  }\n\n  handleAddEvent(evt) {\n    var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    var product = this.props.withPrice == true ? {\n      id: id,\n      name: \"\",\n      price: \"\",\n      qty: 0\n    } : {\n      id: id,\n      name: \"\",\n      qty: 0\n    };\n    this.state.products.push(product);\n    this.setState(this.state.products);\n  }\n\n  handleProductTable(evt) {\n    var item = {\n      id: evt.target.id,\n      name: evt.target.name,\n      value: evt.target.value\n    };\n    var products = this.state.products.slice();\n    var newProducts = products.map(function (product) {\n      for (var key in product) {\n        if (key == item.name && product.id == item.id) {\n          product[key] = item.value;\n        }\n      }\n\n      return product;\n    });\n    this.setState({\n      products: newProducts\n    });\n  }\n\n  handleProductTableName(evt, value) {\n    const id = evt.target.id.split('-')[0];\n    var item = {\n      id: id,\n      value: value\n    };\n    var products = this.state.products.slice();\n    var newProducts = products.map(function (product) {\n      if (product.id == item.id) {\n        product['name'] = item.value;\n      }\n\n      return product;\n    });\n    this.setState({\n      products: newProducts\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ProductTable, {\n      withPrice: this.props.withPrice,\n      onProductTableUpdate: this.handleProductTable.bind(this),\n      onProductTableUpdateName: this.handleProductTableName.bind(this),\n      onRowAdd: this.handleAddEvent.bind(this),\n      onRowDel: this.handleRowDel.bind(this),\n      products: this.state.products,\n      filterText: this.state.filterText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Products;\n\nclass ProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      if (this.props.withPrice == true) {\n        console.log('submit products', this.props.products); // if(checkTotalPrice()){\n        //call server with product table (this.props.product)\n        //     this.setState({\n        //         popTitle:'Thank you!',\n        //         popContent:'You earn 1 point'\n        //     })\n        // }\n        // else{\n        //     this.setState({\n        //         popTitle:'Please check your cart',\n        //         popContent:'The total price of the products in the cart is incorrect '\n        //     })\n        // }\n\n        this.setState({\n          isOpen: true\n        });\n      } else {\n        console.log('submit products', this.props.products);\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      popTitle: 'Thank you!',\n      popContent: 'You earn 1 point'\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  render() {\n    var onProductTableUpdate = this.props.onProductTableUpdate;\n    var onProductTableUpdateName = this.props.onProductTableUpdateName;\n    var rowDel = this.props.onRowDel;\n    var withPrice = this.props.withPrice;\n    var product = this.props.products.map(function (product) {\n      return React.createElement(ProductRow, {\n        withPrice: withPrice,\n        onProductTableUpdate: onProductTableUpdate,\n        onProductTableUpdateName: onProductTableUpdateName,\n        product: product,\n        onDelEvent: rowDel.bind(this),\n        key: product.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"insertTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Quantity\"), this.props.withPrice && React.createElement(\"th\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, product))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      type: \"button\",\n      onClick: this.props.onRowAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Add Product \"), React.createElement(MyButton, {\n      type: \"button\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Dialog, {\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: this.state.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.popTitle), React.createElement(DialogContent, {\n      dividers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.state.popContent)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Button, {\n      autoFocus: true,\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Ok Thanks!\")))));\n  }\n\n}\n\nclass ProductRow extends React.Component {\n  onDelEvent() {\n    this.props.onDelEvent(this.props.product);\n  }\n\n  render() {\n    const ProductOptions = [{\n      title: 'Tomato'\n    }, {\n      title: 'Water'\n    }, {\n      title: 'Milk'\n    }, {\n      title: 'Butter'\n    }, {\n      title: 'Onion'\n    }, {\n      title: 'Flour'\n    }, {\n      title: 'Salt'\n    }];\n    return React.createElement(\"tr\", {\n      className: \"eachRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      id: this.props.product.id,\n      options: ProductOptions,\n      name: \"name\",\n      getOptionLabel: option => option.title,\n      style: {\n        width: 300\n      },\n      onInputChange: this.props.onProductTableUpdateName,\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        placeholder: \"Product Name \",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: this.props.product.id,\n      variant: \"outlined\",\n      name: \"qty\",\n      onChange: this.props.onProductTableUpdate,\n      placeholder: \"Quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: this.props.product.id,\n      variant: \"outlined\",\n      name: \"price\",\n      onChange: this.props.onProductTableUpdate,\n      placeholder: \"Price\",\n      inputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, \"$\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.onDelEvent.bind(this),\n      value: \"X\",\n      className: \"del-btn\",\n      id: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass EditableCell extends React.Component {\n  render() {\n    const ProductOptions = [{\n      title: 'Tomato'\n    }, {\n      title: 'Water'\n    }, {\n      title: 'Milk'\n    }, {\n      title: 'Butter'\n    }, {\n      title: 'Onion'\n    }, {\n      title: 'Flour'\n    }, {\n      title: 'Salt'\n    }];\n    return React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/superhero-react/src/src/pages/insertReceipt/components/Products.js"],"names":["React","styled","Button","TextField","InputAdornment","Dialog","Typography","withStyles","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Autocomplete","MyButton","color","backgroundColor","borderColor","marginRight","styles","theme","root","margin","padding","spacing","minWidth","closeButton","position","right","top","palette","grey","popRoot","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","Products","Component","constructor","state","numRow","filterText","products","withPrice","id","name","price","qty","handleRowDel","product","index","indexOf","splice","setState","handleAddEvent","evt","Date","Math","floor","random","toString","push","handleProductTable","item","target","value","slice","newProducts","map","key","handleProductTableName","split","render","bind","ProductTable","handleClickOpen","console","log","isOpen","handleClose","popTitle","popContent","onProductTableUpdate","onProductTableUpdateName","rowDel","onRowDel","onRowAdd","ProductRow","onDelEvent","ProductOptions","title","option","width","params","startAdornment","EditableCell"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../insertReceipt.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nconst MyButton = styled(Button)({\r\n    color: '#fff',\r\n    backgroundColor: '#20639B',\r\n    borderColor: \"#20639B\",\r\n    marginRight: '10px'\r\n});\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n        minWidth:'400px',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    popRoot:{\r\n        minWidth: '400px',\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Products extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            numRow: 0,\r\n            filterText:  \"\",\r\n            products :this.props.withPrice? [\r\n                {\r\n                    id: '0',\r\n                    name: \"\",\r\n                    price: \"\",\r\n                    qty: 0\r\n                }\r\n            ] :[\r\n                {\r\n                    id: '0',\r\n                    name: \"\",\r\n                    qty: 0\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n\r\n    handleRowDel(product) {\r\n        var index = this.state.products.indexOf(product);\r\n        this.state.products.splice(index, 1);\r\n        this.setState(this.state.products);\r\n    };\r\n\r\n    handleAddEvent(evt) {\r\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\r\n        var product = this.props.withPrice == true?\r\n            {\r\n                id: id,\r\n                name: \"\",\r\n                price: \"\",\r\n                qty: 0\r\n            }\r\n         :\r\n            {\r\n                id: id,\r\n                name: \"\",\r\n                qty: 0\r\n            }\r\n        ;\r\n        this.state.products.push(product);\r\n        this.setState(this.state.products);\r\n    }\r\n\r\n    handleProductTable(evt) {\r\n        var item = {\r\n            id: evt.target.id,\r\n            name: evt.target.name,\r\n            value: evt.target.value\r\n        };\r\n\r\n        var products = this.state.products.slice();\r\n        var newProducts = products.map(function(product) {\r\n\r\n            for (var key in product) {\r\n                if (key == item.name && product.id == item.id) {\r\n                    product[key] = item.value;\r\n                }\r\n            }\r\n            return product;\r\n        });\r\n        this.setState({products:newProducts});\r\n    };\r\n    handleProductTableName(evt,value) {\r\n        const id = evt.target.id.split('-')[0]\r\n\r\n        var item = {\r\n            id: id,\r\n            value: value,\r\n        };\r\n\r\n        var products = this.state.products.slice();\r\n        var newProducts = products.map(function(product) {\r\n                if ( product.id == item.id) {\r\n                    product['name'] = item.value;\r\n                }\r\n            return product;\r\n        });\r\n        this.setState({products:newProducts});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductTable  withPrice ={this.props.withPrice} onProductTableUpdate={this.handleProductTable.bind(this)} onProductTableUpdateName={this.handleProductTableName.bind(this)} onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} products={this.state.products} filterText={this.state.filterText}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Products;\r\n\r\n\r\n\r\nclass ProductTable extends React.Component {\r\n\r\n    handleClickOpen = () => {\r\n        if(this.props.withPrice == true){\r\n            console.log('submit products',this.props.products)\r\n            // if(checkTotalPrice()){\r\n            //call server with product table (this.props.product)\r\n            //     this.setState({\r\n            //         popTitle:'Thank you!',\r\n            //         popContent:'You earn 1 point'\r\n            //     })\r\n            // }\r\n            // else{\r\n            //     this.setState({\r\n            //         popTitle:'Please check your cart',\r\n            //         popContent:'The total price of the products in the cart is incorrect '\r\n            //     })\r\n\r\n\r\n            // }\r\n            this.setState( {isOpen: true});\r\n        }\r\n        else{\r\n            console.log('submit products',this.props.products)\r\n        }\r\n    };\r\n    handleClose = () => {\r\n        this.setState( {isOpen: false});\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            isOpen: false,\r\n            popTitle:'Thank you!',\r\n            popContent:'You earn 1 point'\r\n\r\n    }\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n\r\n    render() {\r\n        var onProductTableUpdate = this.props.onProductTableUpdate;\r\n        var onProductTableUpdateName = this.props.onProductTableUpdateName;\r\n        var rowDel = this.props.onRowDel;\r\n        var withPrice =this.props.withPrice\r\n        var product = this.props.products.map(function(product) {\r\n            return (<ProductRow withPrice ={withPrice} onProductTableUpdate={onProductTableUpdate} onProductTableUpdateName={onProductTableUpdateName} product={product} onDelEvent={rowDel.bind(this)} key={product.id}/>)\r\n        });\r\n        return (\r\n            <div>\r\n                <div className={\"insertTable\"}>\r\n                <table id=\"table\" className={\"table table-bordered\"}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={\"text\"}>Product Name</th>\r\n                        <th className={\"text\"}>Quantity</th>\r\n                        {this.props.withPrice &&\r\n                        <th className={\"text\"}>Price</th>}\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {product}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                <div>\r\n                    <MyButton type=\"button\" onClick={this.props.onRowAdd} >Add Product </MyButton>\r\n                    <MyButton type=\"button\"  onClick={this.handleClickOpen} >Submit</MyButton>\r\n                    <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.isOpen}>\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                            {this.state.popTitle}\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <Typography gutterBottom>\r\n                                {this.state.popContent}\r\n                            </Typography>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button autoFocus onClick={this.handleClose} color=\"primary\">\r\n                                Ok Thanks!\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\nclass ProductRow extends React.Component {\r\n    onDelEvent() {\r\n        this.props.onDelEvent(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        const ProductOptions = [\r\n            { title: 'Tomato' },\r\n            { title: 'Water' },\r\n            { title: 'Milk' },\r\n            { title: 'Butter' },\r\n            { title: 'Onion' },\r\n            { title: 'Flour' },\r\n            { title: 'Salt' },\r\n        ];\r\n        return (\r\n            <tr className=\"eachRow\">\r\n                <td>\r\n                    <Autocomplete\r\n                        id={this.props.product.id}\r\n                        options={ProductOptions}\r\n                        name =\"name\"\r\n                        getOptionLabel={option => option.title}\r\n                        style={{ width: 300 }}\r\n                        onInputChange={this.props.onProductTableUpdateName}\r\n                        renderInput={(params) => (\r\n                            <TextField   {...params}  placeholder=\"Product Name \" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                {/*<TextField*/}\r\n                {/*    id={this.props.product.id}*/}\r\n                {/*    variant=\"outlined\"*/}\r\n                {/*    name =\"name\"*/}\r\n                {/*    onChange={this.props.onProductTableUpdate}*/}\r\n                {/*    placeholder=\"Product Name\"*/}\r\n                {/*/>*/}\r\n                    </td>\r\n                <td>\r\n                    <TextField\r\n                        id={this.props.product.id}\r\n                        variant=\"outlined\"\r\n                        name =\"qty\"\r\n                        onChange={this.props.onProductTableUpdate}\r\n                        placeholder=\"Quantity\"\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <TextField\r\n                        id={this.props.product.id}\r\n                        variant=\"outlined\"\r\n                        name =\"price\"\r\n                        onChange={this.props.onProductTableUpdate}\r\n                        placeholder=\"Price\"\r\n                        inputProps={{startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,}}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <input type=\"button\" onClick={this.onDelEvent.bind(this)} value=\"X\" className=\"del-btn\" id=\"delete\"/>\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n    }\r\n}\r\nclass EditableCell extends React.Component {\r\n\r\n    render() {\r\n        const ProductOptions = [\r\n            { title: 'Tomato' },\r\n            { title: 'Water' },\r\n            { title: 'Milk' },\r\n            { title: 'Butter' },\r\n            { title: 'Onion' },\r\n            { title: 'Flour' },\r\n            { title: 'Salt' },\r\n        ];\r\n        return (\r\n            <td>\r\n                {/*{this.props.isName == true?(*/}\r\n                {/*<Autocomplete*/}\r\n                {/*    id={this.props.cellData.id}*/}\r\n                {/*    options={ProductOptions}*/}\r\n                {/*    name ={this.props.cellData.type}*/}\r\n                {/*    getOptionLabel={option => option.title}*/}\r\n                {/*    style={{ width: 300 }}*/}\r\n                {/*    onInputChange={this.props.onProductTableUpdate}*/}\r\n                {/*    renderInput={(params) => (*/}\r\n                {/*        <TextField   {...params}  placeholder={this.props.cellData.placeHolder} variant=\"outlined\" fullWidth />*/}\r\n                {/*    )}*/}\r\n                {/*/>):(*/}\r\n                {/*<TextField*/}\r\n                {/*    id={this.props.cellData.id}*/}\r\n                {/*    InputProps={this.props.cellData.inputProps}*/}\r\n                {/*    variant=\"outlined\"*/}\r\n                {/*    name ={this.props.cellData.type}*/}\r\n                {/*    onChange={this.props.onProductTableUpdate}*/}\r\n                {/*    placeholder={this.props.cellData.placeHolder}*/}\r\n                {/*/>*/}\r\n                {/*/!*)*!/*/}\r\n            </td>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}