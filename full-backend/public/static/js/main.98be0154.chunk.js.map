{"version":3,"sources":["images/super-hero-logo.png","images/foldedReceipt.jpg","images/receiptPhoto.jpg","images/darkenedbg.jpg","images/vegetables-stall-868110.jpg","components/Copyright.js","pages/SignIn/index.js","pages/userMenu/userMenu.js","pages/cartResult/cartResult.js","pages/dropzone/Dropzone.js","pages/progress/Progress.js","pages/Upload/Upload.js","pages/SignUp/signUp.js","pages/landingPage/landingPage.js","pages/insertReceipt/components/Products.js","pages/insertReceipt/index.js","pages/CreateShoppingCart/MultipleSelect.js","pages/CreateShoppingCart/index.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js","images/shoppingCart.jpg"],"names":["module","exports","Copyright","Typography","variant","color","align","Date","getFullYear","theme","createMuiTheme","palette","primary","500","status","danger","withStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","width","height","form","submit","margin","classes","setCurrentUser","useState","password","setPassword","username","setUsername","ThemeProvider","Container","component","maxWidth","CssBaseline","className","Grid","container","justify","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","Button","onClick","event","preventDefault","fullUrl","urlBase","console","log","axios","post","then","response","data","length","alert","localStorage","setItem","JSON","stringify","window","location","Link","href","Box","mt","main","secondary","useStyles","makeStyles","cardGrid","paddingTop","paddingBottom","justifyContent","card","cardMedia","cardContent","text","textDecoration","cardFooter","backgroundColor","UserMenu","RouterLink","to","Card","CardMedia","image","uploadReceiptPhoto","title","CardContent","underline","translateReceiptPhoto","shoppingCartPhoto","textSecondary","flexGrow","textAlign","CartResult","props","seeFullCart","changeCartState","handleClick","overallPrice","shops","products","i","Result","price","push","store","j","map","index","item","xs","sm","md","product","size","pt","Dropzone","state","hightlight","fileInputRef","React","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","this","disabled","current","click","evt","files","array","fileListToArray","disabed","setState","dataTransfer","list","style","cursor","ref","multiple","alt","src","Component","Progress","progress","Upload","uploading","uploadProgress","successfullUploaded","sid","sum","renderActions","handleChange","clickHandler","prevState","concat","arg","file","percentage","opacity","Form","Group","as","Row","controlId","Label","column","Col","Control","placeholder","checkBox","supermarket","Check","key","registerUser","email","headers","catch","error","formControl","minWidth","selectEmpty","contain","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","SignUp","history","useHistory","area","setArea","inputLabel","useRef","labelWidth","setLabelWidth","setEmail","useEffect","offsetWidth","FormControl","InputLabel","Select","labelId","autoWidth","MenuItem","setTimeout","signIn","Styles","styled","div","homeImage","LandingPage","fluid","MyButton","borderColor","marginRight","DialogTitle","root","padding","closeButton","position","right","top","grey","popRoot","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Products","numRow","filterText","withPrice","qty","indexOf","splice","Math","floor","random","toString","newProducts","slice","split","onProductTableUpdate","handleProductTable","onProductTableUpdateName","handleProductTableName","onRowAdd","handleAddEvent","onRowDel","handleRowDel","handleSubmit","ProductTable","handleClickOpen","isOpen","handleClose","popTitle","popContent","rowDel","onDelEvent","Dialog","aria-labelledby","open","dividers","gutterBottom","ProductRow","Autocomplete","options","onInputChange","renderInput","params","inputProps","startAdornment","InputAdornment","fillReceipt","receipt","uid","markRec","rid","InsertReceipt","serializeProducts","currentUser","reduce","acc","parseInt","headline","body","img","overflow","border","maxHeight","chips","flexWrap","chip","noLabel","font","fontWeight","lineHeight","MenuProps","PaperProps","ITEM_HEIGHT","MultipleSelect","useTheme","StoreName","handleChangeStores","input","Input","renderValue","selected","join","names","Checkbox","checked","ListItemText","shopToId","productToId","getBestBasket","maxSplits","updateResult","result","shopsId","shopsName","forEach","mapShopsToId","productsId","prod","hasOwnProperty","mapProductToId","idObj","nameObj","shopName","prodId","prodName","temp","Object","keys","find","mapBasketResultToName","CreateShoppingCart","findCart","maxSplitAmount","maximalDistanceFromLocation","InputGroup","Prepend","Text","aria-describedby","span","offset","buttonDiv","button","paddingLeft","Layout","NavigationBar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Item","logOut","boatImage","Jumbotron","credits","withRouter","setResult","parse","getItem","isConnected","setIsConnected","Fragment","path","exact","Boolean","hostname","match","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98be0154.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/super-hero-logo.defad421.png\";","module.exports = __webpack_public_path__ + \"static/media/foldedReceipt.74851893.jpg\";","module.exports = __webpack_public_path__ + \"static/media/receiptPhoto.a36910a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/darkenedbg.3455302b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegetables-stall-868110.aed51470.jpg\";","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © Super-Hero '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {500: \"#313746\"},\r\n    },\r\n    status: {\r\n        danger: 'red',\r\n    },\r\n});\r\n\r\nconst SignIn = ({ classes, setCurrentUser }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const urlBase = \"http://localhost:5000\";\r\n\r\n    const signIn = (event) => {\r\n        event.preventDefault();\r\n        var self = this;\r\n        let fullUrl = urlBase +  \"/signin\"\r\n        // let fullUrl = urlBase +  \"/signin?username=\" + username + \"&password=\" + password;\r\n        console.log(\"full path\",fullUrl);\r\n        axios.post(fullUrl, {username, password}).then((response) =>{\r\n            console.log(response.data);\r\n\r\n            if((response.data).length===0){\r\n                //wrong username\\pass\r\n                alert(\"wrong username or password dudes!\");\r\n            } else {\r\n                localStorage.setItem('currentUser', JSON.stringify(response.data[0]));\r\n                window.location = '#/userMenu';\r\n            }\r\n        });\r\n    };\r\n\r\n    // const signIn = () => {\r\n    //     const fullUrl = `http://localhost:3000/signin`;\r\n    //\r\n    //     axios.post(fullUrl, { username, password }).then((response) =>{\r\n    //         const user = response.data[0];\r\n    //         console.log(\"user:\",user);\r\n    //         if(!user){\r\n    //             return alert('Wrong Credentials!')\r\n    //         }\r\n    //         console.log(\"Connected succesfully\");\r\n    //         setCurrentUser(user);\r\n    //         history.push('/upload');\r\n    //     });\r\n    // };\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Grid container>\r\n                    <Grid container justify=\"flex-start\">\r\n                        <Typography component=\"h1\" variant=\"h5\" color=\"Primary\">\r\n                            Sign In\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={signIn}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Link href=\"/signUp\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default withStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        width: '380px',\r\n        height: '260px'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))(SignIn);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Card from '@material-ui/core/Card';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link'\r\nimport uploadReceiptPhoto from \"../../images/foldedReceipt.jpg\";\r\nimport translateReceiptPhoto from \"../../images/receiptPhoto.jpg\";\r\nimport shoppingCartPhoto from \"../../images/shoppingCart.jpg\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: \"#313746\"},\r\n        secondary: {main: '#ffffff'}\r\n    },\r\n    status: {\r\n        danger: 'red',\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    card: {\r\n        height: '200px',\r\n        width: '260px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        height: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    cardContent: {\r\n        paddingTop: theme.spacing(16),\r\n    },\r\n    text: {\r\n        textDecoration: 'none'\r\n    },\r\n    cardFooter: {\r\n        height: '20%',\r\n        backgroundColor: '#313746',\r\n        paddingTop: '6px',\r\n        paddingBottom: '6px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nexport default function UserMenu() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <main>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h4\" color=\"Primary\">\r\n                        What would you like to do?\r\n                    </Typography>\r\n                </Container>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <Grid>\r\n                        <Link component={RouterLink} to='/upload'>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia className={classes.cardMedia} image={uploadReceiptPhoto}\r\n                                           title=\"uploadReceipt\">\r\n                                    <Grid className={classes.cardContent}>\r\n                                        <Typography variant=\"body1\" color=\"Secondary\" className={classes.text}>\r\n                                            Earn 1 credit\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardMedia>\r\n                                <CardContent className={classes.cardFooter}>\r\n                                    <Typography variant=\"h5\" color=\"secondary\">\r\n                                        Upload Receipt\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Link underline='none' component={RouterLink} to='/insert-receipt'>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia className={classes.cardMedia} image={translateReceiptPhoto}\r\n                                           title=\"translateReceipt\">\r\n                                    <Grid className={classes.cardContent}>\r\n                                        <Typography variant=\"body1\" color=\"Secondary\">\r\n                                            Earn 1 credit\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardMedia>\r\n                                <CardContent className={classes.cardFooter}>\r\n                                    <Typography variant=\"h5\" color=\"secondary\">\r\n                                        Fill Receipt Content\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Link underline='none' component={RouterLink} to='/create-shopping-cart'>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia className={classes.cardMedia} image={shoppingCartPhoto}\r\n                                           title=\"createShoppingCart\">\r\n                                    <Grid className={classes.cardContent}>\r\n                                        <Typography variant=\"body1\" color=\"Secondary\">\r\n                                            Use 2 credits\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardMedia>\r\n                                <CardContent className={classes.cardFooter}>\r\n                                    <Typography variant=\"h5\" color=\"secondary\">\r\n                                        Create Shopping Cart\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                </Container>\r\n                <Box mt={8}>\r\n                    <Copyright/>\r\n                </Box>\r\n            </main>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport shoppingCartPhoto from \"../../images/shoppingCart.jpg\";\r\nimport {useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: \"#313746\"},\r\n        secondary: {main: '#ffffff'},\r\n        textSecondary: {main: '#70757a'}\r\n    },\r\n    status: {\r\n        danger: 'red',\r\n    },\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        width: '270px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '30%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    text: {\r\n        textAlign: 'center'\r\n    },\r\n    cardFooter: {\r\n        backgroundColor: '#313746',\r\n        paddingTop: '6px',\r\n        paddingBottom: '6px',\r\n    }\r\n}));\r\n\r\n/*\r\n//get all prices for given shops and products\r\nconst getAllPrices = (shops, products) => {\r\n    let shopsId = [];\r\n    mapShopsToId(shops, shopsId);\r\n    let productsId = {};\r\n    mapProductToId(products, productsId);\r\n    axios.post(urlBase + \"/allPrices\", {\r\n        \"shops\": shopsId,\r\n        \"products\": productsId\r\n    },{\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then( (response) => {\r\n        for(let i=0; i<(response.data).length; i++){\r\n            response.data[i][\"store\"] = Object.keys(shopToId).find(key => shopToId[key] == response.data[i][\"store\"]);\r\n            for(let j=0; j<(response.data[i][\"prods\"]).length; j++){\r\n                response.data[i][\"prods\"][j][\"product\"] = Object.keys(productToId).find(key => productToId[key] == response.data[i][\"prods\"][j][\"product\"]);\r\n            }\r\n        }\r\n        //the object is response.data, but js can't print nested objects so for printing use the below line:\r\n        //console.log(console.log(JSON.stringify(response.data, null, 4)));\r\n    });\r\n};\r\n*/\r\n\r\nexport default function CartResult(props) {\r\n    const classes = useStyles();\r\n    const [seeFullCart, changeCartState] = useState(false);\r\n    const handleClick = () => {\r\n        changeCartState(!seeFullCart)\r\n    }\r\n    let overallPrice = 0;\r\n    let shops = [];\r\n    let products = [];\r\n    for (var i=0; i<props.Result.length; i++){\r\n        overallPrice+=props.Result[i].price;\r\n        shops.push(props.Result[i].store);\r\n        for (var j=0; j<props.Result[i].products; j++){\r\n            products.push(props.Result[i].products[j]);\r\n        }\r\n    }\r\n/*    const fullCart = getAllPrices(shops, products);\r\n\r\n    const sumStoreGroceries = (store) => {\r\n        var fullCartPrice = 0;\r\n        for (var i=0; i<store.groceries.length; i++){\r\n            fullCartPrice+=store.groceries[i].price;\r\n        }\r\n        return fullCartPrice;\r\n    }*/\r\n    var buttonOpen = \"See full carts\";\r\n    var buttonClose = \"Close\";\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <main>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h4\" color=\"Primary\">\r\n                        Here's your optimal buying solution!\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"primary\">\r\n                        Overall Price: {overallPrice} $\r\n                    </Typography>\r\n                </Container>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    {!seeFullCart && props.Result.map(function(store, index){\r\n                        return(\r\n                            <Grid item value={index} xs={10} sm={4} md={3}>\r\n                                <Card className={classes.card}>\r\n                                    <CardMedia className={classes.cardMedia} image={shoppingCartPhoto} title=\"createShoppingCart\">\r\n                                        <Grid>\r\n                                            <Typography variant=\"h5\" color=\"Secondary\" className={classes.text}>\r\n                                                {store.store}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardMedia>\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        {store.products.map(function(product, index){\r\n                                            return(\r\n                                                <Typography value={index} color=\"Primary\">\r\n                                                    {product}\r\n                                                </Typography>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </CardContent>\r\n                                    <CardContent className={classes.cardFooter}>\r\n                                        <Typography value={index} variant=\"body1\" color=\"secondary\">\r\n                                            Overall: {store.price} $\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n                    {/*                    {seeFullCart && fullCart.map(function(store, index){\r\n                        return(\r\n                            <Grid item value={index} xs={10} sm={4} md={3}>\r\n                                <Card className={classes.card}>\r\n                                    <CardMedia className={classes.cardMedia} image={shoppingCartPhoto} title=\"createShoppingCart\">\r\n                                        <Grid>\r\n                                            <Typography variant=\"h5\" color=\"Secondary\" className={classes.text}>\r\n                                                {store.store}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardMedia>\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        {store.groceries.map(function(product, index){\r\n                                            return(\r\n                                                <Typography value={index} color=\"Primary\">\r\n                                                    {product.grocery}: {product.price} ₪\r\n                                                </Typography>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </CardContent>\r\n                                    <CardContent className={classes.cardFooter}>\r\n                                        <Typography value={index} variant=\"body1\" color=\"secondary\">\r\n                                            Overall: {sumStoreGroceries(store)} $\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        );\r\n                    })}*/}\r\n                </Container>\r\n                <Box align='center'>\r\n                    <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={() => changeCartState(handleClick)}>\r\n                        {seeFullCart ? buttonClose : buttonOpen}\r\n                    </Button>\r\n                </Box>\r\n                <Box pt={4} >\r\n                    <Copyright />\r\n                </Box>\r\n            </main>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Dropzone.css\";\r\n\r\nclass Dropzone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hightlight: false };\r\n        this.fileInputRef = React.createRef();\r\n\r\n        this.openFileDialog = this.openFileDialog.bind(this);\r\n        this.onFilesAdded = this.onFilesAdded.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    openFileDialog() {\r\n        if (this.props.disabled) return;\r\n        this.fileInputRef.current.click();\r\n    }\r\n\r\n    onFilesAdded(evt) {\r\n        if (this.props.disabled) return;\r\n        const files = evt.target.files;\r\n        if (this.props.onFilesAdded) {\r\n            const array = this.fileListToArray(files);\r\n            this.props.onFilesAdded(array);\r\n        }\r\n    }\r\n\r\n    onDragOver(event) {\r\n        event.preventDefault();\r\n        if (this.props.disabed) return;\r\n        this.setState({ hightlight: true });\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        this.setState({ hightlight: false });\r\n    }\r\n\r\n    onDrop(event) {\r\n        event.preventDefault();\r\n        if (this.props.disabed) return;\r\n        const files = event.dataTransfer.files;\r\n        if (this.props.onFilesAdded) {\r\n            const array = this.fileListToArray(files);\r\n            this.props.onFilesAdded(array);\r\n        }\r\n        this.setState({ hightlight: false });\r\n    }\r\n\r\n    fileListToArray(list) {\r\n        const array = [];\r\n        for (var i = 0; i < list.length; i++) {\r\n            array.push(list.item(i));\r\n        }\r\n        return array;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}\r\n                onClick={this.openFileDialog}\r\n                style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\r\n            >\r\n                <input\r\n                    ref={this.fileInputRef}\r\n                    className=\"FileInput\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onFilesAdded}\r\n                />\r\n                <img\r\n                    alt=\"upload\"\r\n                    className=\"Icon\"\r\n                    src=\"baseline-cloud_upload-24px.svg\"\r\n                />\r\n                <span>Upload Files</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropzone;","import React, { Component } from \"react\";\r\nimport \"./Progress.css\";\r\n\r\nclass Progress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ProgressBar\">\r\n                <div\r\n                    className=\"Progress\"\r\n                    style={{ width: this.props.progress + \"%\" }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Progress;","import React, { Component } from \"react\";\r\nimport Dropzone from \"../dropzone/Dropzone\";\r\nimport \"./Upload.css\";\r\nimport Progress from \"../progress/Progress\";\r\nimport {SplitButton, Row, Form, Col} from 'react-bootstrap';\r\nimport classes from \"../SignIn\";\r\n\r\nclass Upload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: [],\r\n            uploading: false,\r\n            uploadProgress: {},\r\n            successfullUploaded: false,\r\n            sid: \"\",\r\n            sum: 0,\r\n        };\r\n\r\n        this.onFilesAdded = this.onFilesAdded.bind(this);\r\n        this.renderActions = this.renderActions.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    onFilesAdded(files) {\r\n        this.setState(prevState => ({\r\n            files: prevState.files.concat(files)\r\n        }));\r\n    }\r\n\r\n    clickHandler(e){\r\n        console.log(\"hey my hame is shir\");\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleChange(arg) {\r\n        return (e) => {\r\n            console.log(\"hello here i changed\");\r\n            this.setState({\r\n                [arg]: e.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProgress(file) {\r\n        const uploadProgress = this.state.uploadProgress[file.name];\r\n        if (this.state.uploading || this.state.successfullUploaded) {\r\n            return (\r\n                <div className=\"ProgressWrapper\">\r\n                    <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\r\n                    <img\r\n                        className=\"CheckIcon\"\r\n                        alt=\"done\"\r\n                        src=\"baseline-check_circle_outline-24px.svg\"\r\n                        style={{\r\n                            opacity:\r\n                                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\r\n                        }}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderActions() {\r\n        if (this.state.successfullUploaded) {\r\n            return (\r\n                <button\r\n                    onClick={this.clickHandler\r\n                    }\r\n                >\r\n                    Clear\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button\r\n                    onClick={this.clickHandler}\r\n                >\r\n                    Upload\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Botton\" >\r\n                <div className=\"TopSpace\">\r\n                    <Form >\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label column sm={2}>\r\n                                Total Price:\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control onChange={this.handleChange(\"sum\")} type=\"Price\" placeholder=\"Total Price\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formGridState\">\r\n                            <Form.Label as=\"legend\" column sm={2} >Store</Form.Label>\r\n                            <Col sm={10} className={classes.checkBox}>\r\n                                {[\"SuperYoda\",\r\n                                  \"Shufersal Ramat Aviv\",\r\n                                  \"SuperYoda Tel-Aviv\",\r\n                                  \"SuperYoda East Tel-Aviv\",\r\n                                  \"Shufersal Ramat-Gan\",\r\n                                  \"SuperYoda South\",\r\n                                  \"Rami Levy TLV Center\"].map((supermarket) => (\r\n                                    <Row>\r\n                                        <Form.Check type=\"checkbox\" label={supermarket} />\r\n                                    </Row>\r\n                                ))}\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row}>\r\n\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"Upload\">\r\n                    <span className=\"Title\">Upload Files</span>\r\n                    <div className=\"Content\">\r\n                        <div>\r\n                            <Dropzone\r\n                                onFilesAdded={this.onFilesAdded}\r\n                                disabled={this.state.uploading || this.state.successfullUploaded}\r\n                            />\r\n                        </div>\r\n                        <div className=\"Files\">\r\n                            {this.state.files.map(file => {\r\n                                return (\r\n                                    <div key={file.name} className=\"Row\">\r\n                                        <span className=\"Filename\">{file.name}</span>\r\n                                        {/*{this.renderProgress(file)}*/}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Actions\">{this.renderActions()}</div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Upload;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from '@material-ui/core/Select';\r\nimport Copyright from \"../../components/Copyright\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst registerUser = (username, password, email) => {\r\n\r\n    axios.post(\"http://localhost:5000/register\", {\r\n        username: username,\r\n        password: password,\r\n        email: email\r\n    }, {\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.status);\r\n    }).catch((error) => {\r\n        console.log((error.response.data)); //this will return a message from the server on the error\r\n    })\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {500: \"#313746\"},\r\n    },\r\n    status: {\r\n        danger: 'red',\r\n    },\r\n});\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        width: '380px',\r\n        height: '260px'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 380,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    contain: {\r\n        backgroundImage: `url(${\"https://images.unsplash.com/photo-1516594798947-e65505dbb29d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\"})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundSize: 'cover',\r\n    }\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [area, setArea] = React.useState('');\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const handleChange = event => {\r\n        setArea(event.target.value);\r\n    };\r\n\r\n    const urlBase = \"http://localhost:3000\";\r\n\r\n    const signIn = () => {\r\n        let fullUrl = urlBase +  \"/signin?username=\" + username + \"&password=\" + password;\r\n        console.log(\"full path\",fullUrl)\r\n        axios.post(fullUrl, {username, password}).then((response) =>{\r\n            console.log(response.data);\r\n\r\n            if((response.data).length===0){\r\n                //wrong username\\pass\r\n                alert(\"wrong username or password dudes!\");\r\n            } else {\r\n                localStorage.setItem('currentUser', JSON.stringify(response.data[0]));\r\n                window.location = '/userMenu';\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        registerUser(username, password, email);\r\n        setTimeout(function(){\r\n            signIn();\r\n        },2000);\r\n        history.push('/userMenu');\r\n\r\n    };\r\n\r\n    const areas = [\"Tel Aviv Center\", \"Tel Aviv Old North\", \"Florentin\", \"Givataim\"];\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Grid container>\r\n                    <Grid container justify=\"flex-start\">\r\n                        <Typography component=\"h1\" variant=\"h5\" color=\"Primary\">\r\n                            Sign Up\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"User Name\"\r\n                                name=\"useName\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel ref={inputLabel} id=\"select-area-label\">\r\n                                Area *\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"select-area-label\"\r\n                                id=\"select-area\"\r\n                                value={area}\r\n                                onChange={handleChange}\r\n                                labelWidth={labelWidth}\r\n                                autoWidth\r\n                            >\r\n                                {areas.map(function(area, index){\r\n                                    return <MenuItem value={ index }>{area}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/signIn\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Jumbotron as Jumbo, Container, Button} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport homeImage from '../../images/darkenedbg.jpg';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport Copyright from \"../../components/Copyright\";\r\n\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${homeImage}) no-repeat fixed bottom;\r\n    height: 0;\r\n    padding-bottom: 56.25%;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -2;\r\n    background-position: 50% 50%; \r\n    -webkit-background-size: cover; \r\n    -moz-background-size: cover; \r\n    -o-background-size: cover; \r\n    background-size: cover;\r\n    color: #efefef;\r\n  }\r\n  .content {\r\n    margin-top: 30px;\r\n    margin-left: 150px;\r\n    padding-right: 300px;\r\n    z-index: 0;\r\n   }\r\n  .innerContent {\r\n    padding-right: 100px;\r\n    margin-left: -10px;\r\n    z-index: 1;\r\n  }\r\n  .h1 {\r\n    font-size: 55px;\r\n  }\r\n  .itemIcon{\r\n    width:55px;\r\n    height:55px;\r\n  }\r\n  .button{\r\n    background-color: #313746;\r\n    color: #fff;\r\n    font-size: 25px;\r\n    z-index: 100;\r\n  }\r\n`;\r\n\r\nexport const LandingPage = () => (\r\n    <Styles>\r\n        <Jumbo fluid className=\"jumbo\">\r\n            <Container className=\"content\">\r\n                <h1 className=\"h1\"><EmojiPeopleIcon className=\"itemIcon\"/>SUPER-HERO</h1>\r\n                <br/>\r\n                <h1 className=\"h1\">Find the cheapest shopping cart!</h1>\r\n                <Container className=\"innerContent\">\r\n                    <h3>Divide your groceries between several stores in your selected area.\r\n                        Upload receipts, and fill their information to earn credits</h3>\r\n                </Container>\r\n                <br/>\r\n                <Button variant=\"contained\" href=\"/signUp\" className=\"button\">\r\n                    Sign up for free\r\n                </Button>\r\n            </Container>\r\n        </Jumbo>\r\n        <Copyright/>\r\n    </Styles>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../insertReceipt.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nconst MyButton = styled(Button)({\r\n    color: '#fff',\r\n    backgroundColor: '#20639B',\r\n    borderColor: \"#20639B\",\r\n    marginRight: '10px'\r\n});\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n        minWidth:'400px',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    popRoot:{\r\n        minWidth: '400px',\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Products extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            numRow: 0,\r\n            filterText:  \"\",\r\n            products :this.props.withPrice? [\r\n                {\r\n                    id: '0',\r\n                    name: \"\",\r\n                    price: \"\",\r\n                    qty: 0\r\n                }\r\n            ] :[\r\n                {\r\n                    id: '0',\r\n                    name: \"\",\r\n                    qty: 0\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n\r\n    handleRowDel(product) {\r\n        var index = this.state.products.indexOf(product);\r\n        this.state.products.splice(index, 1);\r\n        this.setState(this.state.products);\r\n    };\r\n\r\n    handleAddEvent(evt) {\r\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\r\n        var product = this.props.withPrice == true?\r\n            {\r\n                id: id,\r\n                name: \"\",\r\n                price: \"\",\r\n                qty: 0\r\n            }\r\n            :\r\n            {\r\n                id: id,\r\n                name: \"\",\r\n                qty: 0\r\n            }\r\n        ;\r\n        this.state.products.push(product);\r\n        this.setState(this.state.products);\r\n        console.log(\"products\",this.state.products)\r\n    }\r\n\r\n    handleProductTable(evt) {\r\n        var item = {\r\n            id: evt.target.id,\r\n            name: evt.target.name,\r\n            value: evt.target.value\r\n        };\r\n\r\n        var products = this.state.products.slice();\r\n        var newProducts = products.map(function(product) {\r\n\r\n            for (var key in product) {\r\n                if (key == item.name && product.id == item.id) {\r\n                    product[key] = item.value;\r\n                }\r\n            }\r\n            return product;\r\n        });\r\n        this.setState({products:newProducts});\r\n    };\r\n    handleProductTableName(evt,value) {\r\n        const id = evt.target.id.split('-')[0]\r\n\r\n        var item = {\r\n            id: id,\r\n            value: value,\r\n        };\r\n\r\n        var products = this.state.products.slice();\r\n        var newProducts = products.map(function(product) {\r\n            if ( product.id == item.id) {\r\n                product['name'] = item.value;\r\n            }\r\n            return product;\r\n        });\r\n        this.setState({products:newProducts});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductTable  withPrice ={this.props.withPrice} onProductTableUpdate={this.handleProductTable.bind(this)} onProductTableUpdateName={this.handleProductTableName.bind(this)} onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} products={this.state.products} handleSubmit={this.props.handleSubmit} filterText={this.state.filterText}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Products;\r\n\r\n\r\n\r\nclass ProductTable extends React.Component {\r\n\r\n    handleClickOpen = () => {\r\n        if(this.props.withPrice == true){\r\n            console.log('submit products',this.props.products)\r\n            // if(checkTotalPrice()){\r\n            //call server with product table (this.props.product)\r\n            //     this.setState({\r\n            //         popTitle:'Thank you!',\r\n            //         popContent:'You earn 1 point'\r\n            //     })\r\n            // }\r\n            // else{\r\n            //     this.setState({\r\n            //         popTitle:'Please check your cart',\r\n            //         popContent:'The total price of the products in the cart is incorrect '\r\n            //     })\r\n\r\n\r\n            // }\r\n            this.setState( {isOpen: true});\r\n        }\r\n        else{\r\n            console.log('submit products',this.props.products)\r\n        }\r\n    };\r\n    handleClose = () => {\r\n        this.setState( {isOpen: false});\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            isOpen: false,\r\n            popTitle:'Thank you!',\r\n            popContent:'You earn 1 point'\r\n\r\n        }\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n\r\n    render() {\r\n        var onProductTableUpdate = this.props.onProductTableUpdate;\r\n        var onProductTableUpdateName = this.props.onProductTableUpdateName;\r\n        var rowDel = this.props.onRowDel;\r\n        var withPrice =this.props.withPrice\r\n        var product = this.props.products.map(function(product) {\r\n            return (<ProductRow withPrice ={withPrice} onProductTableUpdate={onProductTableUpdate} onProductTableUpdateName={onProductTableUpdateName} product={product} onDelEvent={rowDel.bind(this)} key={product.id}/>)\r\n        });\r\n        return (\r\n            <div>\r\n                <div className={\"insertTable\"}>\r\n                    <table id=\"table\" className={\"table table-bordered\"}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th className={\"text\"}>Product Name</th>\r\n                            <th className={\"text\"}>Quantity</th>\r\n                            {this.props.withPrice &&\r\n                            <th className={\"text\"}>Price</th>}\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {product}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <MyButton type=\"button\" onClick={this.props.onRowAdd} >Add Product </MyButton>\r\n                    <MyButton type=\"button\"  onClick={this.props.handleSubmit(this.props.products)} >Submit</MyButton>\r\n                    <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.isOpen}>\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                            {this.state.popTitle}\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <Typography gutterBottom>\r\n                                {this.state.popContent}\r\n                            </Typography>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button autoFocus onClick={this.handleClose} color=\"primary\">\r\n                                Ok Thanks!\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\nclass ProductRow extends React.Component {\r\n    onDelEvent() {\r\n        this.props.onDelEvent(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        const ProductOptions = [\r\n            \"Milk (1 Liter bottle)\",\r\n            \"Eggs\",\r\n            \"Ground Beef (Kilograms)\",\r\n            \"Water (1.5 Liter bottle)\",\r\n            \"Cream Cheese (250 Grams cup)\",\r\n            \"Bread (1 Loaf)\",\r\n            \"Potatoes (Kilograms)\",\r\n            \"Tomatoes (Kilograms)\",\r\n            \"Pasta (500 Grams pack)\",\r\n            \"Rice (400 Grams pack)\",\r\n            \"Apples (Kilograms)\",\r\n            \"Canned Tuna (4 pack)\",\r\n            \"Soy milk (1 Liter bottle)\",\r\n            \"Pringles (600 Grams can)\",\r\n            \"Bamba (70 Grams pack)\",\r\n            \"Bamba (200 Grams pack)\",\r\n\r\n        ];\r\n        return (\r\n            <tr className=\"eachRow\">\r\n                <td>\r\n                    <Autocomplete\r\n                        id={this.props.product.id}\r\n                        options={ProductOptions}\r\n                        name =\"name\"\r\n                        style={{ width: 300 }}\r\n                        onInputChange={this.props.onProductTableUpdateName}\r\n                        renderInput={(params) => (\r\n                            <TextField   {...params}  placeholder=\"Product Name \" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <TextField\r\n                        id={this.props.product.id}\r\n                        variant=\"outlined\"\r\n                        name =\"qty\"\r\n                        onChange={this.props.onProductTableUpdate}\r\n                        placeholder=\"Quantity\"\r\n                    />\r\n                </td>\r\n                {this.props.withPrice &&\r\n                <td>\r\n                    <TextField\r\n                        id={this.props.product.id}\r\n                        variant=\"outlined\"\r\n                        name=\"price\"\r\n                        onChange={this.props.onProductTableUpdate}\r\n                        placeholder=\"Price\"\r\n                        inputProps={{startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,}}\r\n                    />\r\n                </td>\r\n                }\r\n                <td>\r\n                    <input type=\"button\" onClick={this.onDelEvent.bind(this)} value=\"X\" className=\"del-btn\" id=\"delete\"/>\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Products from \"./components/Products\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n// import  logo from \"../SignIn/big-logo.png\";\r\n// import receipt from \"../SignIn/reciptm_example.jpg\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from 'axios';\r\nconst urlBase = \"http://localhost:3000\";\r\n\r\nconst earnCreds = (id) => {\r\n    axios.post(urlBase + \"/earnCredits\", {\r\n        id: id\r\n    }, {\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.status);\r\n    }).catch((error) => {\r\n        console.log((error.response.data)); //this will return a message from the server on the error\r\n    })\r\n};\r\n\r\nconst fillReceipt = (receipt, uid) => {\r\n\r\n    axios.post(urlBase + \"/OCR\", receipt, {\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((response) => {\r\n        earnCreds(uid);\r\n        markRec(receipt.rid);\r\n        console.log(response.status);\r\n    }).catch((error) => {\r\n        console.log((error.response.data)); //this will return a message from the server on the error\r\n    })\r\n};\r\n\r\nconst markRec = (id) => {\r\n    axios.post(urlBase + \"/markRec\", {\r\n        id: id\r\n    }, {\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.status);\r\n    }).catch((error) => {\r\n        console.log((error.response.data)); //this will return a message from the server on the error\r\n    })\r\n};\r\n\r\nclass InsertReceipt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products:[],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(arg) {\r\n        return (e) => {\r\n            this.setState({\r\n                [arg]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit(products) {\r\n        //console.log(this.serializeProducts(products))\r\n        return (e) => {\r\n            this.setState({\r\n                products: this.serializeProducts(products),\r\n            })\r\n            const receipt = {\r\n                \"shop\":\"SuperYuda\",\r\n                \"products\": this.serializeProducts(products),\r\n            }\r\n            fillReceipt(receipt,this.props.currentUser.id);\r\n\r\n        }\r\n    }\r\n\r\n    serializeProducts(products) {\r\n        return products.reduce((acc, product) => ({\r\n            ...acc,\r\n            [product.name]: parseInt(product.qty)*parseInt(product.price)\r\n        }), {})\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Container component=\"main\" >\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <h1 className={classes.headline}>Insert Receipt</h1>\r\n                    <div className={classes.body}>\r\n                        <div className={classes.img}>\r\n                            {/*<img src={receipt} alt=\"logo\" className={classes.avatar}/>*/}\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <Products withPrice ={true} handleSubmit={this.handleSubmit} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent:'center',\r\n    },\r\n    form: {\r\n        width: 'auto',\r\n        flexGrow:2,\r\n        height:'550px',\r\n        padding:'10px',\r\n        overflow:'scroll',\r\n        border: '1px solid #20639B'\r\n    },\r\n    img:{\r\n        width: 'auto',\r\n        flexGrow:1,\r\n        height:'550px',\r\n        padding:'10px',\r\n        marginRight:'10px',\r\n        border: '1px solid #20639B'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    avatar: {\r\n        minWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    body:{\r\n        display:'flex',\r\n    },\r\n    headline:{\r\n        color:'#20639B',\r\n        paddingBottom:'30px'\r\n    },\r\n\r\n\r\n}))(InsertReceipt);\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    chip: {\r\n        margin: 2\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    font:{\r\n        fontWeight: 'bold',\r\n        color:'#20639B',\r\n        lineHeight: 'normal',\r\n        paddingTop: '0px'\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium\r\n    };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Select\r\n                labelId=\"demo-mutiple-checkbox-label\"\r\n                id=\"demo-mutiple-checkbox\"\r\n                multiple\r\n                value={props.StoreName}\r\n                onChange={props.handleChangeStores}\r\n                input={<Input />}\r\n                renderValue={selected => selected.join(\", \")}\r\n                MenuProps={MenuProps}\r\n            >\r\n                {props.names.map(name => (\r\n                    <MenuItem key={name} value={name}>\r\n                        <Checkbox checked={props.StoreName.indexOf(name) > -1} />\r\n                        <ListItemText primary={name} />\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Products from \"../insertReceipt/components/Products\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport MultipleSelect from \"./MultipleSelect\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport axios from 'axios';\r\nconst urlBase = \"http://localhost:3000\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n        minWidth:'400px',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    popRoot:{\r\n        minWidth: '400px',\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nfunction mapShopsToId(shopsName, shopsId){\r\n    let id;\r\n    shopsName.forEach(name => {\r\n        id = shopToId[name];\r\n        shopsId.push(id);\r\n    })\r\n}\r\n\r\nlet shopToId = {\r\n    \"SuperYoda\": 1,\r\n    \"Shufersal Ramat Aviv\": 2,\r\n    \"SuperYoda Tel-Aviv\": 3,\r\n    \"SuperYoda East Tel-Aviv\": 4,\r\n    \"Shufersal Ramat-Gan\": 5,\r\n    \"SuperYoda South\": 6,\r\n    \"Rami Levy TLV Center\": 7\r\n};\r\n\r\nlet zoneToId = {\r\n    \"Tel-Aviv North\": 1,\r\n    \"Tel-Aviv East\": 2,\r\n    \"Tel-Aviv South\": 3,\r\n    \"Tel-Aviv West\": 4,\r\n    \"Tel-Aviv Center\": 5,\r\n    \"Ramat-Gan\": 6\r\n};\r\n\r\nlet productToId = {\r\n    \"Milk (1 Liter bottle)\": 1,\r\n    \"Eggs\": 2,\r\n    \"Ground Beef (Kilograms)\": 3,\r\n    \"Water (1.5 Liter bottle)\": 4,\r\n    \"Cream Cheese (250 Grams cup)\": 5,\r\n    \"Bread (1 Loaf)\": 6,\r\n    \"Potatoes (Kilograms)\": 7,\r\n    \"Tomatoes (Kilograms)\": 8,\r\n    \"Pasta (500 Grams pack)\": 9,\r\n    \"Rice (400 Grams pack)\": 10,\r\n    \"Apples (Kilograms)\": 11,\r\n    \"Canned Tuna (4 pack)\": 12,\r\n    \"Soy milk (1 Liter bottle)\": 13,\r\n    \"Pringles (600 Grams can)\": 14,\r\n    \"Bamba (70 Grams pack)\": 15,\r\n    \"Bamba (200 Grams pack)\": 16\r\n};\r\n\r\nfunction mapProductToId(products, productsId){\r\n    let id;\r\n    for(let prod in products){\r\n        if(products.hasOwnProperty(prod)){\r\n            id = productToId[prod];\r\n            productsId[id] = products[prod];\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapBasketResultToName(idObj, nameObj){\r\n    nameObj[\"price\"] = idObj[\"price\"];\r\n    let temp = Object.keys(idObj[\"basket\"]);\r\n    let shopName,  prodId, prodName;\r\n    for(let i=0; i<temp.length; i++){\r\n        if(idObj[\"shopPrice\"][temp[i]]===0) continue;\r\n        shopName = Object.keys(shopToId).find(key => shopToId[key] == temp[i]);\r\n        nameObj[\"basket\"][shopName] = idObj[\"basket\"][temp[i]];\r\n        nameObj[\"shopPrice\"][shopName] = idObj[\"shopPrice\"][temp[i]];\r\n        for(let j=0; j<(nameObj[\"basket\"][shopName]).length; j++){\r\n            prodId = nameObj[\"basket\"][shopName][j];\r\n            prodName = Object.keys(productToId).find(key => productToId[key] == prodId);\r\n            nameObj[\"basket\"][shopName][j] = prodName;\r\n        }\r\n    }\r\n}\r\nconst payCreds = (id) => {\r\n    axios.post(urlBase + \"/payCredits\", {\r\n        id: id\r\n    }, {\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.status);\r\n    }).catch((error) => {\r\n        console.log((error.response.data)); //this will return a message from the server on the error\r\n    })\r\n};\r\n\r\nconst getBestBasket = (shops, products, maxSplits, uid,updateResult) => {\r\n    let result = {\r\n        \"basket\": {},\r\n        \"shopPrice\": {},\r\n        \"price\": 0\r\n    };\r\n    let shopsId = [];\r\n    mapShopsToId(shops, shopsId);\r\n    let productsId = {};\r\n    mapProductToId(products, productsId);\r\n    axios.post(urlBase + \"/getBasket\", {\r\n        \"maxSplits\": maxSplits,\r\n        \"shops\": shopsId,\r\n        \"products\": productsId\r\n    },{\r\n        headers:{\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then( (response) => {\r\n        payCreds(uid);\r\n        mapBasketResultToName(response.data, result);\r\n        console.log(result);\r\n        console.log(response.data);\r\n        localStorage.setItem('cartResult', JSON.stringify(result));\r\n        window.location = '#/cartResult';\r\n    });\r\n};\r\n\r\nclass CreateShoppingCart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"constructor\")\r\n        this.state = {\r\n            maxSplitAmount: 0,\r\n            maximalDistanceFromLocation: 0,\r\n            area:\"\",\r\n            StoreName:[],\r\n            isOpen: false,\r\n            products:[],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeStores = this.handleChangeStores.bind(this);\r\n        this.findCart = this.findCart.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(arg) {\r\n        return (e) => {\r\n            this.setState({\r\n                [arg]: e.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit(products) {\r\n        return (e) => {\r\n            console.log(this.serializeProducts(products))\r\n            this.setState({\r\n                products: this.serializeProducts(products),\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeStores = (event)=> {\r\n        this.setState({StoreName: event.target.value,});\r\n        console.log(\"storeName\",this.state.StoreName)\r\n    };\r\n\r\n    serializeProducts(products) {\r\n        return products.reduce((acc, product) => ({\r\n            ...acc,\r\n            [product.name]: parseInt(product.qty)\r\n        }), {})\r\n    }\r\n\r\n    findCart = (e) => {\r\n        e.preventDefault();\r\n        //check for points - if not enough change state, if enough - submit\r\n        // this.setState( {isOpen: true});\r\n        console.log(this.state.products)\r\n        getBestBasket(this.state.StoreName,this.state.products,this.state.maxSplitAmount,this.props.currentUser.id,this.props.updateResult);\r\n        window.location = '#/cartResult';\r\n    };\r\n    handleClose = () => {\r\n        //this.setState( {isOpen: false});\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        const ITEM_HEIGHT = 48;\r\n        const ITEM_PADDING_TOP = 8;\r\n        const MenuProps = {\r\n            PaperProps: {\r\n                style: {\r\n                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                    width: 250\r\n                }\r\n            }\r\n        };\r\n        const names = [\r\n            \"SuperYoda\",\r\n            \"Shufersal Ramat Aviv\",\r\n            \"SuperYoda Tel-Aviv\",\r\n            \"SuperYoda East Tel-Aviv\",\r\n            \"Shufersal Ramat-Gan\",\r\n            \"SuperYoda South\",\r\n            \"Rami Levy TLV Center\",\r\n        ];\r\n\r\n        let zoneToId = [\r\n            \"Tel-Aviv North\",\r\n            \"Tel-Aviv East\",\r\n            \"Tel-Aviv South\",\r\n            \"Tel-Aviv West\",\r\n            \"Tel-Aviv Center\",\r\n            \"Ramat-Gan\",\r\n        ];\r\n\r\n        return (\r\n            <Container component=\"main\" >\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <h1 className={classes.headline}>Create Shopping Cart</h1>\r\n                    <div className={classes.body}>\r\n                        <div  className={classes.img}>\r\n                            <Form>\r\n                                <Form.Group as={Row}  className={classes.input} controlId=\"formHorizontalEmail\">\r\n                                    <Form.Label column sm={5} className={classes.font}>\r\n                                        Maximal Splits Amount\r\n                                    </Form.Label>\r\n                                    <Col sm={6}>\r\n                                        <Form.Control onChange={this.handleChange('maxSplitAmount') } />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} className={classes.input} controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={5} className={classes.font}>\r\n                                        Maximal Distance From Location\r\n                                    </Form.Label>\r\n                                    <Col sm={6}>\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"inputGroupPrepend\">Km</InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={this.handleChange(\"maximalDistanceFromLocation\") }\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formGridState\">\r\n                                    <Form.Label as=\"legend\" column sm={5} className={classes.font}>Select Area</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formGridState\">\r\n                                    <Col sm={6}>\r\n                                        <FormControl className={classes.formControl}>\r\n                                            <Select\r\n                                                labelId=\"demo-mutiple-checkbox-label\"\r\n                                                id=\"demo-mutiple-checkbox\"\r\n                                                value={this.state.area}\r\n                                                onChange={this.handleChange(\"area\")}\r\n                                                input={<Input />}\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {zoneToId.map(name => (\r\n                                                    <MenuItem key={name} value={name}>\r\n                                                        <ListItemText primary={name} />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formGridState\">\r\n                                    <Form.Label as=\"legend\" column sm={5} className={classes.font}>Filter by Store</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formGridState\">\r\n                                    <Col sm={6}>\r\n                                        <MultipleSelect  names={names} handleChangeStores={this.handleChangeStores} StoreName={this.state.StoreName}/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm={{ span: 10, offset: 0}} className={classes.buttonDiv}>\r\n                                        <Button className={classes.button} onClick ={this.findCart} >Find The Cheapest Shopping Cart</Button>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            {/*<Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.isOpen}>*/}\r\n                            {/*    <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>*/}\r\n                            {/*        You dont have enough points*/}\r\n                            {/*    </DialogTitle>*/}\r\n                            {/*    <DialogContent dividers>*/}\r\n                            {/*        <Typography gutterBottom>*/}\r\n                            {/*            Please earn more points and try again*/}\r\n                            {/*        </Typography>*/}\r\n                            {/*    </DialogContent>*/}\r\n                            {/*    <DialogActions>*/}\r\n                            {/*        <Button autoFocus onClick={this.handleClose} color=\"primary\">*/}\r\n                            {/*            Ok Thanks!*/}\r\n                            {/*        </Button>*/}\r\n                            {/*    </DialogActions>*/}\r\n                            {/*</Dialog>*/}\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <Products withPrice ={false} handleSubmit={this.handleSubmit}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent:'center',\r\n\r\n    },\r\n    form: {\r\n        width: 'auto',\r\n        flexGrow:2,\r\n        height:'550px',\r\n        padding:'10px',\r\n        overflow:'scroll',\r\n        border: '1px solid #20639B'\r\n    },\r\n    img:{\r\n        width: 'auto',\r\n        flexGrow:1,\r\n        height:'550px',\r\n        marginRight:'10px',\r\n        marginTop:'10px'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    avatar: {\r\n        height: '260px'\r\n    },\r\n    checkBox:{\r\n        paddingLeft:'30px'\r\n    },\r\n    buttonDiv:{\r\n        paddingTop: '100px',\r\n    },\r\n    button:{\r\n        backgroundColor: '#20639B'\r\n    },\r\n    font:{\r\n        fontWeight: 'bold',\r\n        color:'#20639B',\r\n        lineHeight: 'normal',\r\n        paddingTop: '0px'\r\n    },\r\n    body:{\r\n        display:'flex',\r\n    },\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    headline:{\r\n        color:'red',\r\n        paddingBottom:'30px'\r\n    },\r\n    input:{\r\n        paddingBottom: '10px'\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n\r\n}))(CreateShoppingCart);\r\n\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => (\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\r\nimport logo from '../images/super-hero-logo.png';\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-color: #222;\r\n  }\r\n  a, .navbar-brand, .navbar-nav .nav-link {\r\n    color: #bbb;\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleClick = () => {\r\n    this.props.logOut()\r\n    console.log(\"here\")\r\n}\r\n\r\nexport const NavigationBar = (props) => (\r\n    <Styles>\r\n        {!props.currentUser.id &&\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand href=\"/\"><EmojiPeopleIcon className=\"itemIcon\"/></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to='/signIn'>Log In</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        }\r\n        {!!props.currentUser.id &&\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand href=\"/userMenu\"><EmojiPeopleIcon className=\"itemIcon\"/>Super-Hero</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to=\"/userMenu\">Home</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to=\"/upload\">Upload Receipt</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to=\"/insert-receipt\">Fill Receipt</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to='/create-shopping-cart'> Build a Cart</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to='/' onClick={props.logOut}><b>Log Out</b></Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        }\r\n    </Styles >\r\n)\r\n","import React from 'react';\r\nimport {Jumbotron as Jumbo, Container, Navbar} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport boatImage from '../images/vegetables-stall-868110.jpg';\r\nimport logo from \"../images/super-hero-logo.png\";\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${boatImage}) no-repeat fixed bottom;\r\n    background-size: cover;\r\n    color: #efefef;\r\n    height: 200px;\r\n    position: relative;\r\n    z-index: -2;\r\n  }\r\n  .overlay {\r\n    background-color: #000;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const Jumbotron = (props) => (\r\n    <Styles>\r\n        <Jumbo fluid className=\"jumbo\">\r\n            <div className=\"overlay\"></div>\r\n            {!props.currentUser.id &&\r\n            <Container>\r\n                <h1>Welcome</h1>\r\n                <h5>Build the Cheapest shopping cart</h5>\r\n            </Container>\r\n            }\r\n            {!!props.currentUser.id &&\r\n            <Container>\r\n                <h1>Welcome {props.currentUser.username}</h1>\r\n                <h5>Your credits balance: {props.currentUser.credits}</h5>\r\n            </Container>\r\n            }\r\n        </Jumbo>\r\n    </Styles>\r\n)","import React, {useState, Fragment} from 'react';\r\nimport 'bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {BrowserRouter as Router, Route, Switch, useHistory, withRouter, HashRouter} from \"react-router-dom\";\r\nimport './App.css';\r\nimport SignIn from \"./pages/SignIn\";\r\nimport UserMenu from \"./pages/userMenu/userMenu\";\r\nimport CartResult from \"./pages/cartResult/cartResult\";\r\nimport Upload from \"./pages/Upload/Upload\";\r\nimport SignUp from \"./pages/SignUp/signUp\";\r\nimport {LandingPage} from \"./pages/landingPage/landingPage\";\r\nimport InsertReceipt from \"./pages/insertReceipt\";\r\nimport CreateShoppingCart from \"./pages/CreateShoppingCart\";\r\nimport {Layout} from './components/Layout';\r\nimport {NavigationBar} from './components/NavigationBar';\r\nimport {Jumbotron} from './components/Jumbotron';\r\n\r\nvar user = {id: 4, username: \"Michael\", password:\"1234\", email:\"gmail.con\", credits: 10, area:\"Tel-Aviv North\"};\r\n\r\n\r\nfunction App(props) {\r\n\r\n    const[result,setResult] = useState({});\r\n    //const [currentUser, setCurrentUser] = useState({);}\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser')) || {};\r\n    const [isConnected, setIsConnected] = useState(!!currentUser.id);\r\n    //const isConnected = !!currentUser.id;\r\n\r\n    const logOut = () => {\r\n        localStorage.setItem('currentUser', JSON.stringify({}));\r\n        setIsConnected(!isConnected);\r\n        console.log(\"inside logOut\")\r\n    }\r\n    const updateResult = (result) => {\r\n        setResult(result);\r\n        return;\r\n    };\r\n    console.log(\"isConnected \", isConnected)\r\n    console.log(\"currentUser\",currentUser)\r\n    console.log(\"resultsss\",result);\r\n\r\n    return (\r\n        //\r\n        <React.Fragment>\r\n            {!isConnected &&\r\n            <HashRouter>\r\n                <NavigationBar currentUser={currentUser} logOut={logOut}/>\r\n                <div>\r\n                    <Switch>\r\n                        <Fragment>\r\n                            <Route path=\"/signIn\">\r\n                                <Jumbotron currentUser={currentUser}/>\r\n                                <Layout>\r\n                                    <SignIn/>\r\n                                </Layout>\r\n                            </Route>\r\n                            <Route path=\"/signUp\">\r\n                                <Jumbotron currentUser={currentUser}/>\r\n                                <Layout>\r\n                                    <SignUp/>\r\n                                </Layout>\r\n                            </Route>\r\n                            <Route exact path=\"/\">\r\n                                <LandingPage/>\r\n                            </Route>\r\n                        </Fragment>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n            }\r\n            {isConnected &&\r\n            <HashRouter>\r\n                <NavigationBar currentUser={currentUser} logOut={logOut}/>\r\n                <Jumbotron currentUser={currentUser}/>\r\n                <Layout>\r\n                    <div>\r\n                        <Switch>\r\n                            <Fragment>\r\n                                <Route path=\"/upload\">\r\n                                    <div>\r\n                                        <div className=\"App\">\r\n                                            <div className=\"Card\">\r\n                                                <Upload currentUser={currentUser}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Route>\r\n                                <Route path=\"/userMenu\"><UserMenu/></Route>\r\n                                <Route path=\"/insert-receipt\">\r\n                                    <InsertReceipt withPrice={true} currentUser={currentUser}/>\r\n                                </Route>\r\n                                <Route path=\"/create-shopping-cart\">\r\n                                    <CreateShoppingCart updateResult={updateResult} currentUser={currentUser}/>\r\n                                </Route>\r\n                                <Route path=\"/cartResult\"><CartResult Result={result}/></Route>\r\n                            </Fragment>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n            </HashRouter>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Router} from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\n\r\nReactDOM.render(<Router history={history}><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.b9179ea6.jpg\";"],"sourceRoot":""}